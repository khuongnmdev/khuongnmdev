# Simple workflow for deploying prerendered Angular app to GitHub Pages
name: Deploy Angular Prerendered App to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Node.js to install dependencies and build the Angular app
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a specific Node.js version

      # Step 3: Install Angular CLI and dependencies
      - name: Install Dependencies
        run: |
          npm install -g @angular/cli
          npm ci

      # Step 4: Build Angular app with prerendering
      - name: Build Static Prerendered Files
        run: npm run prerender

      # Step 5: Upload the prerendered files (cv\dist\cv\browser) as artifacts for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './cv/dist/cv/browser' # Updated path to prerendered output folder

      # Step 6: Deploy the uploaded artifacts to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
